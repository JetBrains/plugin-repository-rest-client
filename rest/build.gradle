dependencies {
  implementation("com.squareup.retrofit2:retrofit:2.11.0") {
    exclude module: 'okhttp'
  }
  implementation("com.squareup.retrofit2:converter-jaxb:2.11.0")
  implementation("com.squareup.retrofit2:converter-jackson:2.11.0")
  implementation(libs.jackson.databind)
  implementation(libs.okhttp)
  implementation(libs.jackson.kotlin)
  implementation("com.sun.xml.bind:jaxb-impl:2.3.2")
  implementation("com.sun.xml.bind:jaxb-core:2.3.0")
  implementation("org.jetbrains.intellij:blockmap:1.0.5")

  testImplementation(libs.junit)
  testImplementation("org.assertj:assertj-core:3.12.2")
}

test {
  useJUnit()
  group = "Rest client tests"
  description = "Runs rest client tests"

  def baseUrl = System.getProperty("jetbrains.plugins.baseUrl", "https://plugins.jetbrains.com")
  def testToken = System.getProperty("jetbrains.plugins.testToken", null)
  def parallel = System.getProperty("parallel")?.toBoolean()
  def downloadDir = project.layout.buildDirectory.dir("downloads")
  mkdir(downloadDir)

  if (parallel) {
    maxParallelForks = Runtime.runtime.availableProcessors()
    logger.lifecycle("##teamcity[message text='Tests are running in parallel! (maxParallelForks = $maxParallelForks)' status='WARNING']")
  }

  systemProperties = [
    "jetbrains.plugin.download.path"  : downloadDir.get().asFile.absolutePath,
    "jetbrains.plugin.repository.host": baseUrl
  ]
  if (testToken != null) systemProperties.put("jetbrains.plugin.repository.token", testToken)

  finalizedBy "clearDownloadsDir"
}

tasks.register('clearDownloadsDir', Delete) {
  delete project.layout.buildDirectory.dir("downloads")
}
